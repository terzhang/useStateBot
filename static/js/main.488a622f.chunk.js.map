{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/helper/CustomErrorCreator.ts","../../src/customErrors.ts","../../src/index.ts","App.js","index.js"],"names":["d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","cause","message","Error","captureStackTrace","CustomError","name","configNames","insert","isArray","join","CustomErrorCreator","stateNames","actionName","initialOption","initialState","state","setState","options","checkInitialState","ConfigException","StateException","checkBadStates","states","keys","filter","prop","includes","goodStates","checkPath","path","stateName","push","i","len","length","stateObj","to","String","index","badStates","current","isEndState","getPath","givenState","ActionException","getState","reset","targetState","onExit","action","targetStateDef","globalAction","globalExit","globalEnter","onEnter","next","currentStateDef","hasManyPaths","setGlobalEnter","setGlobalExit","setGlobalAction","clearAllGlobals","undefined","idle","console","log","loading","ready","destroyed","App","useStateBot","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.488a622f.chunk.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default class CustomError extends Error {\r\n  cause: string | string[];\r\n  constructor(cause: string | string[], message: string) {\r\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\r\n    super(message);\r\n\r\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, CustomError);\r\n    }\r\n    // the name property is the name of whoever calls this CustomError Constructor\r\n    this.name = this.constructor.name;\r\n    // Custom debugging information\r\n    this.cause = cause;\r\n  }\r\n}\r\n","import CustomErrorCreator from './helper/CustomErrorCreator';\r\n\r\n// Exception for when a config option property is bad\r\nexport class ConfigException extends CustomErrorCreator {\r\n  constructor(configNames: string, message?: string) {\r\n    const insert = Array.isArray(configNames)\r\n      ? configNames.join(', ')\r\n      : configNames;\r\n    // super calls the base constructor\r\n    super(\r\n      configNames,\r\n      message ? message : `Missing or invalid \"${insert} in configOption\"`\r\n    );\r\n  }\r\n}\r\n\r\n// Exception for when a state is bad\r\nexport class StateException extends CustomErrorCreator {\r\n  constructor(stateNames: string | string[], message?: string) {\r\n    const insert = Array.isArray(stateNames)\r\n      ? stateNames.join(', ')\r\n      : stateNames;\r\n    // super calls the base constructor\r\n    super(\r\n      stateNames,\r\n      message ? message : `Missing or invalid \"${insert} in state option\"`\r\n    );\r\n  }\r\n}\r\n\r\n// Exception for when a bad action is called\r\nexport class ActionException extends CustomErrorCreator {\r\n  constructor(actionName: string, message?: string) {\r\n    // super calls the base constructor\r\n    super(actionName, message ? message : `Invalid Action: ${actionName}`);\r\n  }\r\n}\r\n","import { useState, useRef, useEffect, useCallback } from 'react';\nimport {\n  ConfigException,\n  StateException,\n  ActionException,\n} from './customErrors';\nimport { StateBot } from './types';\n\ninterface stateConfig {\n  to?: string | string[];\n  onEnter?: undefined | (() => any);\n  onExit?: undefined | (() => any);\n  action?: undefined | (() => any);\n}\n\ninterface Option {\n  initialState: string;\n  globalEnter?: undefined | (() => any);\n  globalExit?: undefined | (() => any);\n  globalAction?: undefined | (() => any);\n}\n\n// Given a generic type N, exclude all keys from N that's from initialOption\ntype notOptions<N> = Exclude<keyof N, keyof Option>;\n\n// Given a generic type S, generate a State type that...\n// covers all keys in S that is:\n// not of Option type and is of stateConfig type.\ntype State<S> = Record<notOptions<S>, stateConfig>;\n\n// The initial option is the Option type intersecting the State type\ntype initialOption<O> = Option & State<O>;\n\n// create a function with generic type T, that takes a initialOption and...\n// create the appropriate type that covers the Option type and the States type from T\nexport default function useStateBot<T extends initialOption<T>>(\n  initialOption: T\n): StateBot {\n  const [state, setState] = useState(initialOption.initialState);\n  const options = useRef(initialOption);\n\n  const checkInitialState = useCallback(() => {\n    // throw error if initialState is missing\n    if (!initialOption.initialState) {\n      throw new ConfigException('initialState');\n      // the specified initialState is not configured\n    } else if (!initialOption.hasOwnProperty(initialOption.initialState)) {\n      throw new StateException(\n        initialOption.initialState,\n        `${initialOption.initialState} is specified as initialState, but is not configured`\n      );\n    }\n  }, []);\n\n  const checkBadStates = useCallback(() => {\n    // check for inaccessible state (meaning 0 \"to\" statement points to it)\n    // get all the given option properties\n    let keys = Object.keys(initialOption);\n    // strip out the global events\n    const states = keys.filter(\n      (prop) =>\n        !['initialState', 'globalEnter', 'globalExit', 'globalAction'].includes(\n          prop\n        )\n    );\n    const goodStates = [] as string[];\n\n    const checkPath = (path: string, stateName: string) => {\n      if (!states.includes(path)) {\n        // points to a valid state?\n        throw new StateException(\n          path,\n          `${stateName} points to ${path}, but ${path} is not configured`\n        );\n      } else {\n        // append each accessible state to goodStates\n        // if isn't already in there\n        if (!goodStates.includes(path)) {\n          goodStates.push(path);\n        }\n      }\n    };\n\n    // check each states property\n    for (var i = 0, len = states.length; i < len; ++i) {\n      const stateName = states[i];\n      let stateObj = initialOption[stateName];\n\n      // verify state is a valid object\n      if (!stateObj) {\n        throw new StateException(\n          stateName,\n          `Invalid state property. \"${stateName}\" must be a valid object`\n        );\n      }\n\n      const path = stateObj.to;\n      // if it leads to another state, check if its \"to\" property...\n      if (path && (typeof path === 'string' || <any>path instanceof String)) {\n        checkPath(path as string, stateName);\n        // if it's an array\n      } else if (path && Array.isArray(path)) {\n        // check each element inside path array\n        // ! warning don't use the same (ie i & len) in a child for loop, they override parent's\n        for (var index = 0, length = path.length; index < length; ++index) {\n          checkPath(path[index], stateName);\n        }\n        // if it's not null or undefine it's not the right type\n      } else if (path) {\n        throw new ConfigException(\n          'to',\n          `The \"to\" property for \"${stateName}\" must be a String or an Array`\n        );\n      }\n    }\n\n    // bad states is states stripped of good states\n    // make sure to not include initial state since it's allowed to be inaccessible\n    const badStates = states.filter(\n      (state) =>\n        !goodStates.includes(state) && state !== options.current.initialState\n    );\n\n    // throw error when there are bad state(s)\n    if (badStates.length > 0) {\n      throw new StateException(\n        badStates,\n        `One or many isolated states found: \"${badStates.join(', ')}\".`\n      );\n    }\n  }, []);\n\n  // run checks on configOptions on mount\n  useEffect(() => {\n    checkInitialState();\n    checkBadStates();\n  }, []);\n\n  return {\n    isEndState() {\n      return !options.current[state]!.hasOwnProperty('to');\n    },\n    getPath(givenState: string) {\n      // check if given state exist\n      if (!givenState) {\n        throw new ActionException(\n          'getPath',\n          `Missing stateName as argument for getPath`\n        );\n      } else if (givenState && !options.current.hasOwnProperty(givenState)) {\n        throw new ActionException('getPath', `The given stateName is invalid`);\n      }\n      // check it has a path property\n      const stateObj = options.current[givenState];\n      if (!stateObj.hasOwnProperty('to')) {\n        return [];\n      }\n      // always return an array otherwise\n      return Array.isArray(stateObj.to) ? stateObj.to : [stateObj.to];\n    },\n    getState() {\n      return state;\n    },\n    reset() {\n      setState(initialOption.initialState);\n    },\n    // define method for going to another state\n    to(targetState) {\n      // make sure targetState is given and valid\n      if (!targetState || !options.current.hasOwnProperty(targetState)) {\n        throw new ActionException(\n          'to',\n          `Missing or invalid argument for \"to\" method`\n        );\n      }\n\n      // get current state obj\n      // it holds where to, onExit and transition actions\n      const { to, onExit, action } = options.current[state];\n\n      // return not going anywhere (or if it's final state)\n      if (!to) {\n        return;\n        // check if targetState can be reached from current state\n      } else if (Array.isArray(to) && !to.includes(targetState)) {\n        // can't reach if target state is not one of the entry in the to array\n        throw new ActionException(\n          'to',\n          `${targetState} is unreachable from ${state}`\n        );\n      } else if (typeof to === 'string' && to !== targetState) {\n        // can't reach if reachable state is a string and not target state\n        throw new ActionException(\n          'to',\n          `${targetState} is unreachable from ${state}`\n        );\n      }\n\n      // get the target state obj\n      const targetStateDef = options.current[targetState];\n\n      // perform transitioning side effect\n      // when switching, current state is exited (run current state's onExit),\n      // and target state is entered (run to target state's onEnter)\n      options.current.globalAction && options.current.globalAction();\n      action && action();\n      options.current.globalExit && options.current.globalExit();\n      onExit && onExit();\n      options.current.globalEnter && options.current.globalEnter();\n      if (targetStateDef) {\n        targetStateDef.onEnter && targetStateDef.onEnter();\n      }\n\n      // switch bot to to state and return new state\n      setState(targetState);\n      return targetState;\n    },\n    next() {\n      // get current state obj\n      const currentStateDef = options.current[state];\n      // it holds where to, onExit and transition actions\n      const { to, onExit, action } = currentStateDef;\n\n      // it's possible to have no path to go (end state)\n      if (!to) {\n        return;\n      }\n\n      // otherwise, it cannot be an array of more than 1 element\n      let targetState;\n      if (Array.isArray(to)) {\n        if (to.length >= 2 && to.length !== 0) {\n          throw new ActionException(\n            'next',\n            `Multiple path from current state, ${state}. Cannot determined next state.`\n          );\n        } else {\n          // get target state\n          targetState = to[0];\n        }\n      } else {\n        targetState = to;\n      }\n\n      const targetStateDef = options.current[targetState];\n\n      options.current.globalAction && options.current.globalAction();\n      action && action();\n      options.current.globalExit && options.current.globalExit();\n      onExit && onExit();\n      options.current.globalEnter && options.current.globalEnter();\n      targetStateDef.onEnter && targetStateDef.onEnter();\n\n      // switch bot to to state and return new state\n      setState(targetState);\n      return targetState;\n    },\n    hasManyPaths() {\n      // get current state obj\n      const currentStateDef = options.current[state];\n      const { to } = currentStateDef;\n      return Array.isArray(to) && to.length > 1;\n    },\n    setGlobalEnter(onEnter: () => any): void {\n      options.current.globalEnter = onEnter();\n    },\n    setGlobalExit(onExit: () => any): void {\n      options.current.globalExit = onExit();\n    },\n    setGlobalAction(action: () => any): void {\n      options.current.globalAction = action();\n    },\n    clearAllGlobals() {\n      options.current.globalEnter = undefined;\n      options.current.globalExit = undefined;\n      options.current.globalAction = undefined;\n    },\n  };\n}\n","import React from 'react';\nimport './index.css';\nimport useStateBot from 'usestatebot';\n\nconst options = {\n  initialState: 'idle',\n  idle: {\n    to: 'loading',\n    onEnter: () => console.log('entering idle state \\n=='),\n    onExit: () => console.log('exiting idle state'),\n    action: () => console.log('running idle transition side effect'),\n  },\n  loading: {\n    to: ['idle', 'ready'],\n    onEnter: () => console.log('entering loading state \\n=='),\n    onExit: () => console.log('leaving loading state'),\n    action: () => console.log('running action transition side effect'),\n  },\n  ready: {\n    to: 'destroyed',\n    onEnter: () => console.log('entering ready state \\n=='),\n    onExit: () => console.log('leaving ready state'),\n    action: () => console.log('taking action on ready state'),\n  },\n  destroyed: {\n    onEnter: () => console.log('state is now: destroyed \\n=='),\n  },\n};\n\nconst App = () => {\n  const { getState, next, to, reset, isEndState } = useStateBot(options);\n\n  const displayButtons = () => {\n    if (getState() === 'loading') {\n      return (\n        <div className=\"buttonGroup\">\n          <button onClick={() => to('idle')}>Cancel</button>\n          <button onClick={() => to('ready')}>Ready!</button>\n        </div>\n      );\n    } else if (isEndState()) {\n      return (\n        <button\n          onClick={() => {\n            reset();\n            console.log('Bot is reset back to ' + options.initialState);\n          }}\n        >\n          Reset Bot\n        </button>\n      );\n    } else {\n      return <button onClick={() => next()}>Next State</button>;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <p className=\"stateText\">\n        {'State: '}\n        <span>{getState()}</span>\n      </p>\n      {displayButtons()}\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}